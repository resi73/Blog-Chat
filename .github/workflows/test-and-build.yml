name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install backend dependencies
      run: npm install

    - name: Install frontend dependencies
      run: |
        cd client
        npm install

    - name: Check backend dependencies
      run: |
        echo "Checking backend dependencies..."
        npm list --depth=0

    - name: Check frontend dependencies
      run: |
        cd client
        echo "Checking frontend dependencies..."
        npm list --depth=0

    - name: Build frontend
      run: |
        cd client
        npm run build

    - name: Run security audit
      run: |
        npm audit --audit-level moderate || true
        cd client && npm audit --audit-level moderate || true

  build-docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: blog-chat-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        file: ./client/Dockerfile
        push: false
        tags: blog-chat-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max 